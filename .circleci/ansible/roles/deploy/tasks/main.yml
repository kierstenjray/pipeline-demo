---
  - name: "show remote environment"
    shell: env

  - name: "Create directory"
    become: true
    file:
      path: /home/ubuntu/uda_people
      state: directory
      owner: ubuntu
      group: ubuntu
      mode: 0755

  - name: Copy backend tar file
    become: true
    copy:
      src: /root/project/backend.tar.gz
      dest: /home/ubuntu/uda_people/
      owner: ubuntu
      group: ubuntu
      mode: 0755

  - name: "Check for tar file"
    become: true
    command:
      ls -l /home/ubuntu/uda_people/backend.tar.gz

  - name: Unarchive tar file on the remote machine
    ansible.builtin.unarchive:
       remote_src: yes
       src: /home/ubuntu/uda_people/backend.tar.gz
       dest: /home/ubuntu/uda_people

  - name: "Check and install npm"
    become: true
    command: npm install
    args:
      chdir: /home/ubuntu/uda_people/backend

  - name: "delete anything that might already be running"
    become: true
    command: pm2 delete all
    ignore_errors: true

  - name: "start server"
    become: true
    command: pm2 start -f ./main.js
    args:
      chdir: /home/ubuntu/uda_people/backend/dist

  - name: "Create Prometheus user"
    become: true
    command:
      sudo useradd --no-create-home node_exporter


  - name: Make node exporter directory in /home/ubuntu/node_exporter
    file:
      path: /home/ubuntu/node_exporter
      state: directory
      mode: 0755

  - name: GET Node Exporter packages
    get_url:
      url: https://github.com/prometheus/node_exporter/releases/download/v1.0.1/node_exporter-1.0.1.linux-amd64.tar.gz
      dest: /home/ubuntu/node_exporter
      # mode: 0755

  # - name: "Install Node binaries"
  #   become: true
  #   command: |
  #     echo "Check Node Explorer list"
  #     ls /home/ubuntu
  #     cd /home/ubuntu/node_exporter
  #     wget https://github.com/prometheus/node_exporter/releases/download/v1.0.1/node_exporter-1.0.1.linux-amd64.tar.gz


  # - name: "Check for node exporter tar file"
  #   become: true
  #   command: |
  #     echo "check for node exporter file!!!"
  #     ls -l /home/ubuntu/node_exporter

  - name: Unarchive node exporter
    become: true
    unarchive:
      src: /home/ubuntu/node_exporter/node_exporter-1.0.1.linux-amd64.tar.gz
      dest: /usr/local/bin/node_exporter

  # - name: "Tar and cleanup"
  #   become: true
  #   command: |
  #     # tar xzf node_exporter-1.0.1.linux-amd64.tar.gz
  #     sudo cp /home/ubuntu/node_exporter/node_exporter-1.0.1.linux-amd64/node_exporter /usr/local/bin/node_exporter
  #     rm -rf node_exporter-1.0.1.linux-amd64.tar.gz node_exporter-1.0.1.linux-amd64

  # - name: "Copy service file"
  #   become: true
  #   copy:
  #     src: /root/project/node-exporter.service
  #     dest: /etc/systemd/system
  #     owner: ubuntu
  #     group: ubuntu
  #     mode: 0755

  # - name: "Check for service file"
  #   become: true
  #   command:
  #     ls -l /etc/systemd/system/node-exporter.service

  # - name: "Configure systemd"
  #   become: true
  #   command: |
  #     sudo systemctl daemon-reload
  #     sudo systemctl enable node-exporter
  #     sudo systemctl start node-exporter
  #     sudo systemctl status node-exporter

    environment:
     ENVIRONMENT: production
     TYPEORM_CONNECTION: "{{ lookup('env', 'TYPEORM_CONNECTION') }}"
     TYPEORM_MIGRATIONS_DIR: "./migrations"
     TYPEORM_MIGRATIONS: "./migrations/*.js"
     TYPEORM_ENTITIES: "./modules/domain/**/*.entity.js"
     TYPEORM_HOST: "{{ lookup('env', 'TYPEORM_HOST') }}"
     TYPEORM_PORT: "{{ lookup('env', 'TYPEORM_PORT') }}"
     TYPEORM_USERNAME: "{{ lookup('env', 'TYPEORM_USERNAME') }}"
     TYPEORM_PASSWORD: "{{ lookup('env', 'TYPEORM_PASSWORD') }}"
     TYPEORM_DATABASE: "{{ lookup('env', 'TYPEORM_DATABASE') }}"